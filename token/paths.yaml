get:
  responses:
    '200':
      content:
        application/json:
          schema:
            $ref: schemas.yaml#/TokenGet
      description: Local token status
    '401':
      $ref: ../common/responses.yaml#/Unauthorized
  summary: Get Local API Token
  description: |
    Request token for accessing Bond over local network.

    If `locked` is true, reply will contain neither `token` nor `account_code`.

    Typical use case for this endpoint is:

       - request GET, finding that the endpoint is locked
       - perform PATCH with `"locked": 0`, the correct `pin`,
         and your `account_code` (if you want to take ownership of the Bond)
       - request GET again to get `token`
       - perform PATCH with `"locked": 1`

    Alternatively, user may perform the proof-of-ownership event
    (such as holding down the Power button on a SBB remote for 5 sec),
    which will unlock the endpoint. In that case, the API client should
    poll GET waiting for unlock.

    Lastly, this endpoint is unlocked for 10 minutes following power cycle.

    Note: The token is not required for /sys/version and /token endpoints.
    However, all other endpoints require token to be provided in a BOND-Token
    HTTP header.
  tags:
  - Token

patch:
  requestBody:
    content:
      application/json:
        schema:
          $ref: schemas.yaml#/TokenPatch
  responses:
    '200':
      content:
        application/json:
          schema:
            $ref: schemas.yaml#/TokenPatch
      description: Token unlocked
    '400':
      $ref: ../common/responses.yaml#/BadRequest
    '401':
      $ref: ../common/responses.yaml#/Unauthorized
    '500':
      $ref: ../common/responses.yaml#/InternalServerError
  summary: Add Bond to an Account (or Unlock Token)
  description: |
    If locked, provide `pin` (located on the product label) to unlock this endpoint.
    If `pin` is not provided or incorrect, a 401 will be returned.

    If an `account_code` is provided, saves it to the Bond. When the Bond communicates
    with the backend, the Bond will be added to the account associated with
    `account_code`. You can find your `account_code` on the user screen in the mobile
    app.

    You can also use this endpoint to simply find out your Bond's locked `token`
    by providing a `pin`
  tags:
  - Token
