Vrc:
  properties:
    enabled:
      example: true
      type: boolean
      description: |
        When enabled, the `vrc/keystream` endpoint becomes available.

        When enabling Vrc for one device, all other device's Vrcs are
        implicitely disabled.

VrcKeystream:
  type: object
  properties:
    seq:
      example: 3210
      type: integer 
      description: |
        Sequence number which client should increments for request.

        DESIGN NOTE: Actually it's not clear that we need this. The request ID
        already serves to prevent duplicate actions.
    event:
      example: HOLD
      type: string
      description: |
        Event which occured on the specified key. Possibilities are:
          - TAP -- sent if a brief (< 300 ms) press and release occurs on one or more
             keys. If keys are tapped together (say, within 200 ms), 
             only a single TAP event should be sent with `key` specifying both.
          - DOUBLE_TAP (unsupported)
          - HOLD_START -- sent after 300 ms of a key being held down.
             If two keys are starting to be pressed within 300 ms of eachother,
             only a single HOLD_START event should be sent.
          - HOLD -- sent every 300 ms while keys are held.
          - HOLD_END -- sent when a held key is released, where only the
            released keys are specified in `key`. If some keys are still
            held, they will continue to send `HOLD`.
            
    key:
      example: [1, 3]
      type: array
      description: |
        list of 1-based key numbers. Must be non-empty.
        
        Key mappings:
          - Key 1: UP
          - Key 2: STOP
          - Key 3: DOWN
          - Key 4: PAIR
          - Key 5: MENU
          - Key 6: AUX (SK_BUTTON_MATE_AUX)
          - Key 7: K1 (SK_BUTTON_MATE_QUICK_1)
          - Key 8: K2 (SK_BUTTON_MATE_QUICK_2)
          - Key 9: K3 (SK_BUTTON_MATE_QUICK_3)
          - Key 10: LEFT (SK_BUTTON_MATE_LEFT)
          - Key 11: RIGHT (SK_BUTTON_MATE_RIGHT)
        
        In the case of a single key, an integer may be sent instead of an array.
    hold_ms:
      example: 1760
      type: integer
      description: |
        Length of time for which key(s) has been held, in milliseconds.
        Only provided for HOLD and HOLD_END events.
        
        For multiple keys, this is the time since the last change
        of keys pressed.
